comp <- bg_2023 %>%
rename(pop_2023 = pop) %>%
left_join(bg_2018_xw %>%
select(geoid = geoid_2020, pop_2018)) %>%
st_drop_geometry() %>%
distinct(geoid, pop_2023) %>%
get_dupes(geoid, pop_2023)
comp <- bg_2023 %>%
rename(pop_2023 = pop) %>%
left_join(bg_2018_xw %>%
select(geoid = geoid_2020, pop_2018)) %>%
summarize(.by = geoid,
pop_2023 = min(pop_2023),
pop_2018 = sum(pop_2018))
comp <- bg_2023 %>%
rename(pop_2023 = pop) %>%
left_join(bg_2018_xw %>%
select(geoid = geoid_2020, pop_2018)) %>%
group_by(geoid) %>%
summarize(pop_2023 = min(pop_2023),
pop_2018 = sum(pop_2018))
n_distinct(comp$geoid)
comp <- bg_2023 %>%
rename(pop_2023 = pop) %>%
left_join(bg_2018_xw %>%
select(geoid = geoid_2020, pop_2018)) %>%
group_by(geoid) %>%
summarize(pop_2023 = min(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = pop_2023 / pop_2018)
?mapview
mapview(comp, zcol = "pop_change")
mapview(comp %>%
filter(pop_change < 3), zcol = "pop_change")
seq(1400, 2200, 200)
mapview(comp %>%
filter(pop_change < 3), zcol = "pop_change", at = c(0, 0.5, 0.8, 0.9, 1, 1.1, 1.2, 1.5, 3))
?brewer.pal
mapview(comp %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 0.5, 0.8, 0.9, 1, 1.1, 1.2, 1.5, 3),
col.regions = brewer.pal(9, "PiYG"))
library(RColorBrewer)
mapview(comp %>%
filter(pop_change < 3),
zcol = "pop_change",
# at = c(0, 0.5, 0.8, 0.9, 1, 1.1, 1.2, 1.5, 3),
col.regions = brewer.pal(9, "PiYG"))
mapview(comp %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 1, 3),
colors = c("red", "blue"))
mapview(comp %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 1, 3),
colors = c("red", "blue", "green"))
mapview(comp %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 1, 3),
col.regions = c("red", "blue", "green"))
tract_2023 <- tracts(state = "PA", county = "Philadelphia")
View(tract_2023)
tract <- tracts(state = "PA", county = "Philadelphia")
tract_level <- tract %>%
select(tract_geoid = GEOID)
?st_join
tract_level <- tract %>%
select(tract_geoid = GEOID) %>%
st_join(comp %>%
select(pop_2023, pop_2018),
join = st_contains)
View(tract_level)
View(tract_level["2691", 4])
tract_level <- tract %>%
select(tract_geoid = GEOID) %>%
st_join(comp %>%
select(bg_geoid = geoid, pop_2023, pop_2018),
join = st_contains)
?str_sub
str_sub("421010001", -3)
str_sub("421010001", 6)
str_sub("421010001", 1, 6)
str_sub("421010001", 1, 11)
str_sub("421010001011", 1, 11)
tract_aggregate <- comp %>%
mutate(county_geoid = str_sub(geoid, 1, 11))
View(tract_aggregate)
tract_aggregate <- comp %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11))
tract_aggregate <- comp %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = pop_2023 / pop_2018)
tract_aggregate <- comp %>%
st_drop_geometry() %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = pop_2023 / pop_2018)
tract_aggregate <- comp %>%
st_drop_geometry() %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = pop_2023 / pop_2018) %>%
left_join(tract %>%
select(county_geoid = GEOID))
mapview(tract_aggregate %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 1, 3),
col.regions = c("red", "blue", "green"))
class(tract_aggregate)
?st_as_sf
tract_aggregate <- comp %>%
st_drop_geometry() %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = pop_2023 / pop_2018) %>%
left_join(tract %>%
select(county_geoid = GEOID)) %>%
st_as_sf()
mapview(tract_aggregate %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 1, 3),
col.regions = c("red", "blue", "green"))
mapview(tract_aggregate %>%
filter(pop_change < 3),
zcol = "pop_change",
at = c(0, 0.5, 0.8, 1, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"))
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.5, 0.8, 1, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"))
round(1.123456)
round(1.123456, 2)
tract_aggregate <- comp %>%
st_drop_geometry() %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = round(pop_2023 / pop_2018), 2) %>%
left_join(tract %>%
select(county_geoid = GEOID)) %>%
st_as_sf()
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.5, 0.8, 1, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"))
round(1.123456, 2)
tract_aggregate <- comp %>%
st_drop_geometry() %>%
filter(!is.na(pop_2018)) %>%
mutate(county_geoid = str_sub(geoid, 1, 11)) %>%
group_by(county_geoid) %>%
summarize(pop_2023 = sum(pop_2023),
pop_2018 = sum(pop_2018)) %>%
mutate(pop_change = round((pop_2023 / pop_2018), 2)) %>%
left_join(tract %>%
select(county_geoid = GEOID)) %>%
st_as_sf()
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.5, 0.8, 1, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"))
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.5, 0.8, 0.98, 1.02, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "gray", "#d9f0d3", "#7fbf7b", "#1b7837"))
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.5, 0.8, 0.98, 1.02, 1.2, 1.5, 3),
col.regions = c("#762a83", "#af8dc3", "#e7d4e8", "white", "#d9f0d3", "#7fbf7b", "#1b7837"))
mapview(tract_aggregate,
zcol = "pop_change",
at = c(0, 0.1, 0.5, 0.8, 0.98, 1.02, 1.2, 1.5, 3),
col.regions = c("darkgray", "#762a83", "#af8dc3", "#e7d4e8", "white", "#d9f0d3", "#7fbf7b", "#1b7837"))
43/405
40/405
82/405
library(tidyverse)
library(arrow)
library(leaflet)
library(tigris)
library(sf)
library(DT)
library(janitor)
library(this.path)
library(snakecase)
options(scipen = 999)
options(tigris_use_cache = TRUE)
# Path to data directory
data_path <- str_c(this.dir(), "data", sep = "/")
county_month_aggregated <- read_csv(
str_c(
data_path,
"aggregated_data",
"county_month_aggregated_2025-04-14.csv",
sep = "/"
)
)
county_total_aggregated <- read_csv(
str_c(
data_path,
"aggregated_data",
"county_total_aggregated_2025-04-14.csv",
sep = "/"
)
)
county_month_thresholds <- read_csv(
str_c(data_path,
"coverage_data",
"county_month_selected_grantees_2025-04-14.csv",
sep = "/"
)
)
county_total_thresholds <- read_csv(
str_c(data_path,
"coverage_data",
"county_total_selected_grantees_2025-04-14.csv",
sep = "/"
)
)
county_month_missing_address <- read_csv(
str_c(data_path,
"coverage_data",
"county_month_missing_address_summary_2025-04-14.csv",
sep = "/"
)
)
county_total_missing_address <- read_csv(
str_c(data_path,
"coverage_data",
"county_total_missing_address_summary_2025-04-14.csv",
sep = "/"
)
)
states <- states(year = 2020, , cb = TRUE) %>%
st_drop_geometry()
counties_raw <- counties(year = 2020, cb = TRUE)
counties <- counties_raw %>%
left_join(states %>%
select(STATEFP, state = NAME),
by = "STATEFP") %>%
# Exclude territories
filter(!state %in% c("Puerto Rico",
"United States Virgin Islands",
"Guam",
"Commonwealth of the Northern Mariana Islands",
"American Samoa"))
library(tidycensus)
# Renter population for 2023 5-year ACS, for coverage comparison
vars <- load_variables(year = 2023, dataset = "acs5")
?get_acs
View(vars)
# Renter population for 2023 5-year ACS, for coverage comparison
renter_households <-
get_acs(geography = "county", year = 2023, survey = "acs5",
variables = "B25003_003")
View(renter_households)
View(counties)
counties <- counties_raw %>%
left_join(states %>%
select(STATEFP, state = NAME),
by = "STATEFP") %>%
# Exclude territories
filter(!state %in% c("Puerto Rico",
"United States Virgin Islands",
"Guam",
"Commonwealth of the Northern Mariana Islands",
"American Samoa")) %>%
left_join(renter_households %>%
select(GEOID, renter_households = estimate),
by = "GEOID")
library(tidylog)
counties <- counties_raw %>%
left_join(states %>%
select(STATEFP, state = NAME),
by = "STATEFP") %>%
# Exclude territories
filter(!state %in% c("Puerto Rico",
"United States Virgin Islands",
"Guam",
"Commonwealth of the Northern Mariana Islands",
"American Samoa")) %>%
left_join(renter_households %>%
select(GEOID, renter_households = estimate),
by = "GEOID")
# Renter population for 2023 5-year ACS, for coverage comparison
renter_households <-
get_acs(geography = "county", year = 2021, survey = "acs5",
variables = "B25003_003")
counties <- counties_raw %>%
left_join(states %>%
select(STATEFP, state = NAME),
by = "STATEFP") %>%
# Exclude territories
filter(!state %in% c("Puerto Rico",
"United States Virgin Islands",
"Guam",
"Commonwealth of the Northern Mariana Islands",
"American Samoa")) %>%
left_join(renter_households %>%
select(GEOID, renter_households = estimate),
by = "GEOID")
View(counties)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_included = counties_included / sum(counties_included)) %>%
ungroup()
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup()
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup()
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage("Percent counties included", digits = 1)
?formatPercentage
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_total_aggregated$county_geoid_coalesced) %>%
group_by(state, in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
arrange(state) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
rename_with(~to_sentence_case(.)) %>%
datatable() %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
rename_with(~to_sentence_case(.)) %>%
datatable(options = list(paging = FALSE, searching = FALSE)) %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_total_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
rename_with(~to_sentence_case(.)) %>%
datatable(options = list(paging = FALSE, searching = FALSE)) %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_month_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
rename_with(~to_sentence_case(.)) %>%
datatable(options = list(paging = FALSE, searching = FALSE)) %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
counties %>%
st_drop_geometry() %>%
mutate(in_dataset = GEOID %in% county_total_aggregated$county_geoid_coalesced) %>%
group_by(in_dataset) %>%
summarize(counties_included = n(),
renter_households = sum(renter_households)) %>%
mutate(percent_counties_included = counties_included / sum(counties_included)) %>%
mutate(percent_renter_households = renter_households / sum(renter_households)) %>%
ungroup() %>%
filter(in_dataset) %>%
select(-in_dataset, -renter_households) %>%
rename_with(~to_sentence_case(.)) %>%
datatable(options = list(paging = FALSE, searching = FALSE)) %>%
formatPercentage(c("Percent counties included", "Percent renter households"), digits = 1)
